% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreFuns.R
\name{permute_null}
\alias{permute_null}
\title{permutation test for the scored samples with gene set size and}
\usage{
permute_null(n_up, n_down, ranked_sample, B = 100, seed = 1)
}
\arguments{
\item{n_up}{numeric  size of up set}

\item{n_down}{numeric size of down set}

\item{ranked_sample}{matrix, outcome of function rankGenes()}

\item{B}{numeric number of permuting times}

\item{seed}{nunmeric set the seed for randomization}
}
\value{
a list consists of empircal scores, p values and the tested result scores
}
\description{
This function randomize the genes in the gene set and calculate the sample's score against the
random gene sets which form the null distribution for the simple score test. The resulting
permutation score results are used to calculate the empirical P value.
}
\examples{
ranked <- rankGenes(toy_expr)
scoredf <- simpleScore(ranked, upSet = toy_up, downSet = toy_dn)
n_up = length(GSEABase::geneIds(toy_up))
n_down = length(GSEABase::geneIds(toy_dn))
#no_cores <- detectCores() - 1
#This permutation function can be run using parallel scripts, refer to the
#vignette for examples
#cl <- makeCluster(no_cores)
#registerDoParallel(cl)
permuteResult = permute_null(n_up = n_up, n_down = n_down, ranked, B =10,
seed = 1)
#stopCluster(cl)
#registerDoSEQ()
}
