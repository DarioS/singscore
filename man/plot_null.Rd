% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreFuns.R
\name{plot_null}
\alias{plot_null}
\title{Plot the empirical null distribution using the permutation result}
\usage{
plot_null(permuResult, scoredf, pvals, sampleNames = NULL, cutoff = 0.01,
  alpha = 1, size = 1, textSize = 2, labelSize = 5)
}
\arguments{
\item{permuResult}{A matrix, outcome from function \code{\link[=permute_null]{permute_null()}}}

\item{scoredf}{A dataframe, outcome from function \code{\link[=singscoring]{singscoring()}}}

\item{pvals}{A vector, outcome of function \code{\link[=get_pval]{get_pval()}}}

\item{sampleNames}{A vector of character, sample names or multiple sample labels}

\item{cutoff}{double, the cutoff value for determining significance}

\item{alpha}{numeric,ggplot theme element}

\item{size}{numeric,ggplot theme element}

\item{textSize}{numeric,ggplot theme element}

\item{labelSize}{numeric, size of label texts.}
}
\value{
a ggplot object
}
\description{
This function takes the results from function \code{\link[=permute_null]{permute_null()}} and
plots the density curves of empirical scores for the given samples.
}
\examples{
ranked <- rankGenes(toy_expr)
scoredf <- simpleScore(ranked, upSet = toy_up, downSet = toy_dn)
n_up = length(GSEABase::geneIds(toy_up))
n_down = length(GSEABase::geneIds(toy_dn))
#This permutation function can be run using parallel scripts, refer to the
#vignette for examples
#no_cores <- detectCores() - 1
#using parallel scripts
#cl <- makeCluster(no_cores)
#registerDoParallel(cl)
permuResult = permute_null(n_up = n_up, n_down = n_down, ranked, B = 10,
 seed = 1)
#stopCluster(cl)
#registerDoSEQ()
pvals <- get_pval(permuResult,scoredf)
plot_null(permuResult,scoredf,pvals,sampleNames = names(pvals))
plot_null(permuResult,scoredf,pvals,sampleNames = names(pvals)[1])
}
\author{
Ruqian Lyu
}
