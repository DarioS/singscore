% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreFuns.R
\name{get_pval}
\alias{get_pval}
\title{calculate the p values for tested sample scores}
\usage{
get_pval(permuResult, scoredf)
}
\arguments{
\item{permuResult}{A matrix, result from permuteNull() function}

\item{scoredf}{A dataframe, result from simplescore() function}
}
\value{
pvals, the calculated empirical p values for all empirical null
sample scores distribution
}
\description{
This function takes the permutation result, which is the
empirical scores, and the test sample scores as input. It calculates the
empirical p values of the simple sample scoring test.
}
\examples{
ranked <- rankGenes(toy_expr)
scoredf <- simpleScore(ranked, upSet = toy_up, downSet = toy_dn)
n_up = length(GSEABase::geneIds(toy_up))
n_down = length(GSEABase::geneIds(toy_dn))
#no_cores <- detectCores() - 1
#This permutation function can be run using parallel scripts, refer to the
#vignette for examples
#cl <- makeCluster(no_cores)
#registerDoParallel(cl)
permuResult = permute_null(n_up = n_up, n_down = n_down, ranked, B = 10,
 seed = 1)
#stopCluster(cl)
#registerDoSEQ()
pvals <- get_pval(permuResult,scoredf)
}
