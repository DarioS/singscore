% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CoreFuns.R
\name{getPvals}
\alias{getPvals}
\title{Calculate the empirical p values}
\usage{
getPvals(permuResult, scoredf)
}
\arguments{
\item{permuResult}{A matrix, result from \code{\link[=generateNull]{generateNull()}} function}

\item{scoredf}{A dataframe, result from \code{\link[=simpleScore]{simpleScore()}} function}
}
\value{
Estimated p-values for the tested sample, i.e the calculated
empirical p-values
}
\description{
This function takes the permutation results, which is the
empirical scores from \code{\link[=generateNull]{generateNull()}}, and the calculated sample scores
using \code{\link[=simpleScore]{simpleScore()}} as inputs. It calculates the empirical p-values of
the 'simpleScore' scoring test using formula p = (r+1)/(m+1) where r is
the number of empirical scores that are larger than the obtained score and
m is the total number of permutation run which is the B parameter in
\code{\link[=generateNull]{generateNull()}}
}
\examples{
ranked <- rankGenes(toy_expr)
scoredf <- simpleScore(ranked, upSet = toy_gs_up, downSet = toy_gs_dn)
n_up = length(GSEABase::geneIds(toy_gs_up))
n_down = length(GSEABase::geneIds(toy_gs_dn))
# find out what backends can be registered on your machine
BiocParallel::registered()
# the first one is the default backend, and it can be changed explicitly.
permuteResult = generateNull(n_up = n_up, n_down = n_down, ranked, B =10,
seed = 1) # call the permutation function to generate the empirical scores 
#for B times.
pvals <- getPvals(permuteResult,scoredf)
}
\author{
Ruqian Lyu
}
